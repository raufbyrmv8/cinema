plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.named("jar"){
enabled=false
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //model mapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version:'3.1.1'
    //model mapper
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    compileOnly 'org.projectlombok:lombok'
    //swagger
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
//    //security
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    //jwt
//    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
//    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    annotationProcessor 'org.projectlombok:lombok'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    //test
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

}

tasks.named('test') {
    useJUnitPlatform()
}
